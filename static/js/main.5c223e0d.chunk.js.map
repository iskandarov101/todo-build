{"version":3,"sources":["components/TodoItems/Group.jsx","components/TodoItems/Index.js","components/TodoItems/Option.jsx","App.js","index.js"],"names":["Group","children","className","Option","title","id","handleDelete","useState","inputText","setInputText","isDisabled","setIsDisabled","inputRef","useRef","onChange","e","target","value","onBlur","onKeyPress","charCode","allItems","JSON","parse","window","localStorage","getItem","editingEl","find","todo","editingElIndex","findIndex","editedElement","splice","setItem","ref","type","disabled","onClick","setTimeout","current","focus","App","todoText","setTodoText","todoList","setTodoList","deletingItemIndex","stringify","useEffect","length","onSubmit","push","preventDefault","map","item","index","removeItem","alert","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c223e0d.chunk.js","sourcesContent":["import './main.scss';\r\nconst Group = ({children})=> {\r\n\r\n  return(\r\n    <ul className=\"list-group mt-3\">\r\n      {children}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default Group;","import Group from './Group';\r\nimport Option from './Option';\r\n\r\nexport default {\r\n  Group, Option\r\n}","import { useRef, useState } from \"react\";\r\nconst Option = ({title, id, handleDelete})=> {\r\n  const [ inputText, setInputText ] = useState(title);\r\n  const [ isDisabled, setIsDisabled ] = useState(true);\r\n  const inputRef = useRef(null)\r\n\r\n  const handleEditFocus = ()=> {\r\n    setIsDisabled(false)\r\n    \r\n    setTimeout(()=> {\r\n      inputRef.current.focus()\r\n    }, 0)\r\n  }\r\n\r\n  const handleEdit = (e) => {\r\n    if(e.charCode === 13 ) {\r\n      setIsDisabled(true)\r\n\r\n      let allItems = JSON.parse(window.localStorage.getItem('todos'))\r\n      let editingEl = allItems.find(todo => todo.id === id);\r\n      let editingElIndex = allItems.findIndex(todo => todo.id === id);\r\n      let editedElement = {\r\n        ...editingEl,\r\n        title: inputText\r\n      }\r\n      allItems.splice(editingElIndex, 1, editedElement)\r\n      window.localStorage.setItem('todos', JSON.parse([...allItems]))\r\n    }\r\n  }\r\n  return(\r\n    <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n      <input \r\n      onChange={(e)=> setInputText(e.target.value)}\r\n      onBlur={()=> setIsDisabled(true)} \r\n      onKeyPress={handleEdit}\r\n      ref={inputRef} type=\"text\" \r\n      disabled={isDisabled} \r\n      value={inputText} \r\n      className='input-todo'\r\n      />\r\n      \r\n      <div>\r\n        <button className='btn btn-outline-primary me-3' onClick={handleEditFocus}>Change</button>\r\n        <button className='btn btn-outline-danger' onClick={()=> handleDelete(id)}>Delete</button>\r\n      </div>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Option;","import { useState, useEffect } from 'react';\nimport TodoItem from './components/TodoItems/Index';\n\nfunction App() {\n\n  const [ todoText, setTodoText ] = useState('')\n\n  const [ todoList, setTodoList ] = useState([]);\n\n  const handleSubmit = (e)=> {\n    if(todoText.length > 0) {\n      todoList.push({\n        id: todoList.length > 0 ? todoList[todoList.length - 1].id + 1 : 0,\n        title: todoText\n      });\n      window.localStorage.setItem('todos', JSON.stringify(todoList))\n    }\n    setTodoText('');\n    e.preventDefault()\n  }\n\n  const handleSave = ()=> {\n    alert('Saved')\n\n    window.localStorage.setItem('todos', JSON.stringify(todoList));\n  }\n\n  const handleDeleteAll = ()=> {\n    setTodoList([]);\n    window.localStorage.removeItem('todos')\n  }\n\n  const handleDelete = (id)=> {\n    let deletingItemIndex = todoList.findIndex(todo => todo.id === id);\n    todoList.splice(deletingItemIndex, 1)\n    window.localStorage.setItem('todos', JSON.stringify(todoList));\n    setTodoList(JSON.parse(window.localStorage.getItem('todos')))\n  }\n\n  useEffect(()=> {\n    if(window.localStorage.getItem('todos')){\n      setTodoList(JSON.parse(window.localStorage.getItem('todos')))\n    }\n  }, [])\n\n  return (\n    <div className=\"container\">\n      <div className='row'>\n        <div className='col-md-3'>\n\n        </div>\n        <div className='col-md-6'>\n          <div className='card mt-5'>\n            <div className='card-header'>\n              <h1>Qaytlar soni: {todoList.length}</h1>\n            </div>\n\n           \n\n            <div className='card-body'>\n              <form  className='d-flex' onSubmit={handleSubmit} >\n                <input \n                className='form-control me-3' \n                type=\"text\" \n                value={todoText}\n                onChange={(e)=> setTodoText(e.target.value)}\n                />\n                <button type='button' className=\"btn btn-success\">Add</button>\n              </form>\n              <TodoItem.Group>\n                {\n                  todoList.map((item, index)=> (\n                    <TodoItem.Option \n                    title={item.title}\n                    key={index}\n                    id={item.id}\n                    handleDelete={handleDelete}\n                    />\n                  ))\n                }\n              </TodoItem.Group>\n            </div>\n            <div className='card-footer d-flex justify-content-end'>\n              <button className=\"btn btn-danger me-3\" onClick={handleDeleteAll}>Clear</button>\n              <button className=\"btn btn-primary\" onClick={handleSave}>Save</button>\n            </div>\n          </div>\n        </div>\n        <div className='col-md-3'>\n\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}